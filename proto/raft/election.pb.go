// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.33.0
// source: proto/raft/election.proto

package raft

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VoteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Term          int32                  `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	CandidateId   int32                  `protobuf:"varint,2,opt,name=candidateId,proto3" json:"candidateId,omitempty"`
	LastLogIndex  int32                  `protobuf:"varint,3,opt,name=lastLogIndex,proto3" json:"lastLogIndex,omitempty"`
	LastLogTerm   int32                  `protobuf:"varint,4,opt,name=lastLogTerm,proto3" json:"lastLogTerm,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VoteRequest) Reset() {
	*x = VoteRequest{}
	mi := &file_proto_raft_election_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteRequest) ProtoMessage() {}

func (x *VoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_raft_election_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteRequest.ProtoReflect.Descriptor instead.
func (*VoteRequest) Descriptor() ([]byte, []int) {
	return file_proto_raft_election_proto_rawDescGZIP(), []int{0}
}

func (x *VoteRequest) GetTerm() int32 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *VoteRequest) GetCandidateId() int32 {
	if x != nil {
		return x.CandidateId
	}
	return 0
}

func (x *VoteRequest) GetLastLogIndex() int32 {
	if x != nil {
		return x.LastLogIndex
	}
	return 0
}

func (x *VoteRequest) GetLastLogTerm() int32 {
	if x != nil {
		return x.LastLogTerm
	}
	return 0
}

type Vote struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Term          int32                  `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	VoteGranted   bool                   `protobuf:"varint,2,opt,name=voteGranted,proto3" json:"voteGranted,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Vote) Reset() {
	*x = Vote{}
	mi := &file_proto_raft_election_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Vote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vote) ProtoMessage() {}

func (x *Vote) ProtoReflect() protoreflect.Message {
	mi := &file_proto_raft_election_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vote.ProtoReflect.Descriptor instead.
func (*Vote) Descriptor() ([]byte, []int) {
	return file_proto_raft_election_proto_rawDescGZIP(), []int{1}
}

func (x *Vote) GetTerm() int32 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *Vote) GetVoteGranted() bool {
	if x != nil {
		return x.VoteGranted
	}
	return false
}

var File_proto_raft_election_proto protoreflect.FileDescriptor

const file_proto_raft_election_proto_rawDesc = "" +
	"\n" +
	"\x19proto/raft/election.proto\x12\x04raft\"\x89\x01\n" +
	"\vVoteRequest\x12\x12\n" +
	"\x04term\x18\x01 \x01(\x05R\x04term\x12 \n" +
	"\vcandidateId\x18\x02 \x01(\x05R\vcandidateId\x12\"\n" +
	"\flastLogIndex\x18\x03 \x01(\x05R\flastLogIndex\x12 \n" +
	"\vlastLogTerm\x18\x04 \x01(\x05R\vlastLogTerm\"<\n" +
	"\x04Vote\x12\x12\n" +
	"\x04term\x18\x01 \x01(\x05R\x04term\x12 \n" +
	"\vvoteGranted\x18\x02 \x01(\bR\vvoteGranted28\n" +
	"\bElection\x12,\n" +
	"\vRequestVote\x12\x11.raft.VoteRequest\x1a\n" +
	".raft.VoteB1Z/github.com/djsurt/the-new-zookeepers/proto/raftb\x06proto3"

var (
	file_proto_raft_election_proto_rawDescOnce sync.Once
	file_proto_raft_election_proto_rawDescData []byte
)

func file_proto_raft_election_proto_rawDescGZIP() []byte {
	file_proto_raft_election_proto_rawDescOnce.Do(func() {
		file_proto_raft_election_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_raft_election_proto_rawDesc), len(file_proto_raft_election_proto_rawDesc)))
	})
	return file_proto_raft_election_proto_rawDescData
}

var file_proto_raft_election_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_proto_raft_election_proto_goTypes = []any{
	(*VoteRequest)(nil), // 0: raft.VoteRequest
	(*Vote)(nil),        // 1: raft.Vote
}
var file_proto_raft_election_proto_depIdxs = []int32{
	0, // 0: raft.Election.RequestVote:input_type -> raft.VoteRequest
	1, // 1: raft.Election.RequestVote:output_type -> raft.Vote
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_raft_election_proto_init() }
func file_proto_raft_election_proto_init() {
	if File_proto_raft_election_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_raft_election_proto_rawDesc), len(file_proto_raft_election_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_raft_election_proto_goTypes,
		DependencyIndexes: file_proto_raft_election_proto_depIdxs,
		MessageInfos:      file_proto_raft_election_proto_msgTypes,
	}.Build()
	File_proto_raft_election_proto = out.File
	file_proto_raft_election_proto_goTypes = nil
	file_proto_raft_election_proto_depIdxs = nil
}
